body { margin: 0; background-color: var(--backgroundColor, black) }

@font-face { font-family: "Handwriting"; src: url("fonts/Handwriting.woff2") }

@keyframes tetris__spinLinear {
	to { transform:rotate(360deg) } }

@keyframes tetris__spinEase {
	12.5% { transform:rotate(135deg) }
	25% { transform:rotate(270deg) }
	37.5% { transform:rotate(405deg) }
	50% { transform:rotate(540deg) }
	62.5% { transform:rotate(675deg) }
	75% { transform:rotate(810deg) }
	87.5% { transform:rotate(945deg) }
	to { transform:rotate(1080deg) } }

@keyframes tetris__spinLeft {
	0% { transform:rotate(130deg) }
	50% { transform:rotate(-5deg) }
	to { transform:rotate(130deg) } }

@keyframes tetris__spinRight {
	0% { transform:rotate(-130deg) }
	50% { transform:rotate(5deg) }
	to { transform:rotate(-130deg) } }

@keyframes tetris__tvOff {
	0% { transform: translate(-8%,-7%) scale(0.65);
	     filter: brightness(1);
	     opacity: 1 }
	60% { transform: translate(-8%,-7%) scale(0.65, 0.001);
	      filter: brightness(10) }
	100% { animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
	       transform: translate(-8%,-7%) scale(0, 0.001);
	       filter: brightness(50) } }

@keyframes turn__tvOn {
	0% { transform: translate(-8%,-7%)scale(0.65,0.52);
	     filter: brightness(30);
	     opacity: 1 }
	3.5% { transform: translate(-8%,20%) scale(0.65,0.52) }
	3.6% { transform: translate(-8%,-20%) scale(0.65,0.52);
	       opacity:1 } 
	9% { transform: translate(-8%,20%) scale(0.65,0.39);
	     filter: brightness(30);
	     opacity: 0 }
	11% { transform: translate(-8%,-7%) scale(0.65,0.65);
	      filter: contrast(0) brightness(0);
	      opacity: 0 }
	100% { transform: translate(-8%,-7%) scale(0.65,0.65);
	       filter: contrast(1) brightness(1.2) saturate(1.3);
	      opacity: 1 } }

/* Tetris Container */
.tetris__article {
	will-change: opacity, background-color, color;
	transition: opacity 1s, background-color 0.25s, color 0.25s;
	box-sizing: border-box;
	width: 100%;
	background-color: var(--colorBackground, white);
	color: var(--colorText, black);
	margin-inline-start: auto; margin-inline-end: auto;
	padding: 0 1.5em 100vh }
.tetris__article:not(.loaded) { opacity: 0 }
.tetris__article.loaded { opacity: 1 }
.tetris__article.visited { opacity: 1 !important }

/* Layout */
.tetris__article p {
	margin-block-start: 1.5em; margin-block-end: 1.5em }
.tetris__figure,
.tetris__blockquote {
	margin-block-start: 3em; margin-block-end: 3em }
.tetris__blockquote > p:last-of-type:not(:last-child) {
	margin-block-end: 0 }
.tetris__caption {
	margin-block-start: 1em; margin-block-end: 1em }
.tetris__section {
	margin-block-start: 6em; margin-block-end: 6em }
.tetris__sectionTitle {
	margin-block-start: 3em; margin-block-end: 3em }

.tetris__article p,
.tetris__figure {
	margin-inline-start: 0; margin-inline-end: 0 }
.tetris__blockquote {
	margin-inline-start: 3em; margin-inline-end: 3em }
.tetris__image {
	margin-inline-start: auto; margin-inline-end: auto; max-width: 90vmin }

/* Typography */
.tetris__article {
	font-family: "IBM Plex Sans", sans-serif;
	font-size: 2.5vmin; font-weight: 400; line-height: 1.5 }
.tetris__caption {
	font-size: 0.75em; font-weight: 300 }
.tetris__citePublication {
	font-style: italic }
.tetris__sectionTitle {
	text-align: center;
	text-transform: uppercase }

.tetris__citeTitle::before,
.tetris__citeTitle::after,
.tetris__quote::before,
.tetris__quote::after,
.tetris__citeDate {
	display: inline-block;
	text-decoration: none; text-indent: 0; }
.tetris__citeTitle::before,
.tetris__quote::before {
	content: "\201C" }
.tetris__citeTitle::after,
.tetris__quote::after {
	content: "\201D" }

/* Generics */
.tetris__article a:link { color: var(--blue60) }
.tetris__article a:active { color: var(--blue70) }
.tetris__article a:visited { color: var(--purple60) }
.tetris__article a:visited:active { color: var(--purple70) }

.tetris__article abbr { text-decoration: none }

.tetris__figure {
	display: grid; grid-template-columns: min-content;
	justify-content: center; align-content: center }

.tetris__imageLink {
	display: inline-flex }

.tetris__table {
	border: solid 2px var(--colorText, black);
	border-collapse: collapse }
.tetris__table th,
.tetris__table td {
	border: solid 1px var(--colorText, black);
	padding: 0.75em 1em }

.tetris__blockquoteHeader {
	margin-bottom: 1.5em }
.tetris__blockquoteSpeaker {
	max-width: 20em; padding-left: 1em;
	text-indent: -1em; }

/* General Specifics */
.tetris__section.intro .tetris__sectionTitle,
.tetris__section.callToAction .tetris__sectionTitle { display: none }
.tetris__section.callToAction > p { margin-block-end: 3em }

/* 3-D Box Art */
.tetris__article {
	--x: 0.5; --y: 0.5 }
.tetris__articleHeader {
	transition: transform 1s ease-in-out;
	min-height: 100vh;
	display: grid; grid-template: min-content min-content; 
	justify-content: center; align-content: center;
	transform: translateY(-5vh) }
.tetris__articleHeader.focused { 
	transition: transform 0.25s ease-in-out;
	transform: translateY(-5vh) scale(1.1) }
.tetris__articleTitle,
.tetris__articleSubtitle {
	margin: 0; display: inline-flex }
.tetris__articleSubtitle {
	margin-block-start: -100% }
.boxArt.tetris__image { width: 75vw; height: auto }
.boxArt.tetris__image.front { opacity: 0 } /* hide flat image to replace with layered effect */
.boxArt.tetris__imageLink {
	--flipped: 0;
	--direction: 1;
	--maxX: 1; --maxY: 1;
   --offsetX: calc(var(--x) * 2 - 1);
	--offsetY: calc(var(--y) * 2 - 1);
	will-change: box-shadow, transform;
	transition: all 1s cubic-bezier(0.23, 1, 0.32, 1), outline 0s;
	backface-visibility: hidden;
	max-width: 90vw;
	margin: 0 auto;
	border-radius: 3pt; overflow: hidden; display: inline-flex;
	box-shadow: calc(var(--offsetX) * var(--maxX) * -1vmin + 0.5vmin)
					calc(var(--offsetY) * var(--maxY) * -1vmin + 0.5vmin)
					2vmin rgba(0,0,0,0.25);
	transform: perspective(200vmin)
				rotateX(calc(var(--offsetY) * var(--maxY) * -3deg))
				rotateY(calc(var(--offsetX) * var(--maxX) * 3deg + var(--direction) * var(--flipped) * 180deg)) }
.boxArt.tetris__imageLink:hover { --maxX: 5; --maxY: 1.5 }
.boxArt.tetris__imageLink.flipped { --flipped: 1 }
.boxArt.tetris__imageLink.back { --flipped: -1 }
.boxArt.tetris__imageLink.back.flipped { --flipped: 0 }
.boxArt.tetris__imageLink.front { background: url("images/Artwork/Background.jpg") no-repeat; background-size: contain; z-index: 1 }
.boxArt.tetris__imageLink.front::before,
.boxArt.tetris__imageLink.front::after {
	--stack: 0;
	will-change: filter, transform;
	transition: all 1s cubic-bezier(0.23, 1, 0.32, 1), outline 0s;
	content: ""; display: block; position: absolute;
	left: 0; top: 0;
	width: 100%; height: 100%;
	filter: drop-shadow(calc(var(--offsetX) * -3px) calc(var(--offsetY) * -3px) 1px rgba(0,0,0,0.2));
	transform: perspective(100vmin)
	           translateX(calc(var(--stack) * var(--offsetX) * var(--maxX) * 0.1vmin))
	           translateY(calc(var(--stack) * var(--offsetY) * var(--maxY) * 0.1vmin)) }
.boxArt.tetris__imageLink.front::before {
	--stack: 1;
	background: url("images/Artwork/Logo Shadow.png") center no-repeat;
	background-size: 100% 100% }
.boxArt.tetris__imageLink.front::after {
	--stack: 2;
	background: url("images/Artwork/Logo Fill.png") center no-repeat;
	background-size: 100% 100% }

/* Video Player */
.commercial.tetris__figure {
	position: relative }
.commercial.tetris__imageLink {
	transform: scale(1.07) }
.commercial.tetris__image {
	opacity: 0 } /* hide image for layered video player */
.commercial.tetris__imageLink::before {
	z-index: 1;
	background: var(--colorText, black) }
.commercial.tetris__video {
	z-index: 2 }
.commercial .tetris__imageMap::before {
	z-index: 2;
	background-image: url("images/Commercial/Keyframe.jpg") }
.commercial.tetris__imageLink::after {
	z-index: 3;
	background-image: url("images/Commercial/Play.svg") }
.commercial.tetris__spinner,
.commercial .tetris__videoDisplay[data-volume]::before,
.commercial .tetris__videoDisplay[data-volume]::after  {
	z-index: 3; }
.commercial .tetris__imageMap::after {
	z-index: 4;
	background-image: url("images/Commercial/Overlay.png") }
.commercial .tetris__image {
	z-index: 5 }
.commercial.tetris__imageLink::before,
.commercial .tetris__imageMap::before,
.commercial.tetris__video,
.commercial.tetris__imageLink .tetris__spinner  {
	transform: translate(-8%,-7%) scale(0.65) }
.commercial.tetris__imageLink {
	position: relative }
.commercial.tetris__imageLink::before,
.commercial .tetris__imageMap::before,
.commercial .tetris__imageMap::after,
.commercial.tetris__imageLink::after {
	content: "" }
.commercial.tetris__imageLink::before,
.commercial .tetris__imageMap::before,
.commercial .tetris__imageMap::after ,
.commercial .tetris__videoDisplay::before,
.commercial .tetris__videoDisplay::after {
	position: absolute;
	left: 0; top: 0;
	width: 100%; height: 100%;
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center }
.commercial.tetris__imageLink::after {
	will-change: filter, opacity, transition-duration;
	transition: filter 0.5s ease-in-out, opacity 0.5s ease-in-out;
	content: "";
	position: absolute;
	left: 36%; top: 35%;
	width: 44px; height: 44px;
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
	opacity: 0;
	filter: grayscale(1) }
.commercial.tetris__imageLink.paused:not(.off)::after {
	opacity: 0.5 }
.commercial.tetris__imageLink.paused:not(.off):hover::after {
	transition-duration: 0.25s;
	opacity: 0.75;
	filter: grayscale(0) }
.commercial.tetris__imageLink.start::after,
.commercial.tetris__imageLink.loading::after,
.commercial.tetris__imageLink.waiting::after,
.commercial.tetris__imageLink.buffering::after {
	background: none }
.commercial.tetris__imageLink.playing::before,
.commercial.tetris__imageLink.playing::after,
.commercial.tetris__imageLink .tetris__spinner {
	opacity: 0 }
.commercial.tetris__imageLink.pause .tetris__video,
.commercial.tetris__imageLink.paused .tetris__video {
	display: none }
.commercial.tetris__video,
.commercial.tetris__video > *,
.commercial.tetris__spinner {
	display: block;
	position: absolute; }
.commercial.tetris__video,
.commercial.tetris__video > * {
	width: 100%; height: 100% }
.commercial.tetris__spinner {
	width: 17%; height: 17%;
	left: 35%; top: 35% }
.commercial.loading .tetris__spinner {
	opacity: 1 }
.commercial .tetris__videoDisplay[data-channel]::before {
	z-index: 5; opacity: 0.75;
	position: absolute; top: 15%; left: 15%; font-size: 200%;
	width: auto; height: auto;
	color: var(--colorChannel, lime);
	content: attr(data-channel) }
.commercial .tetris__videoDisplay[data-volume]::after {
	z-index: 5;
	position: absolute;
	left: 42%; top: 65%;
	width: 12.5em; height: auto;
	transform: translateX(-50%);
	content: attr(data-volume);
	text-align: left;
	font-size: 100%; letter-spacing: 0.25em;
	color: rgba(255,255,255,0.85);
	text-shadow: 0 0 1px #000, 0 0 2px #000,
	             -1px 0 1px #FFF, 0 1px 1px #FFF }
.commercial .tetris__videoDisplay[data-volume="0"]::after { content: "" }
.commercial .tetris__videoDisplay[data-volume="10"]::after { content: "▋" }
.commercial .tetris__videoDisplay[data-volume="20"]::after { content: "▋▋" }
.commercial .tetris__videoDisplay[data-volume="30"]::after { content: "▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="40"]::after { content: "▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="50"]::after { content: "▋▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="60"]::after { content: "▋▋▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="70"]::after { content: "▋▋▋▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="80"]::after { content: "▋▋▋▋▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="90"]::after { content: "▋▋▋▋▋▋▋▋▋" }
.commercial .tetris__videoDisplay[data-volume="100"]::after { content: "▋▋▋▋▋▋▋▋▋▋" }
.commercial .tetris__imageMap::before {
	animation: tetris__tvOn 4s linear;
	animation-fill-mode: forwards }
.commercial.tetris__imageLink.off .tetris__imageMap::before,
.commercial.tetris__imageLink.off .tetris__video {
	animation: tetris__tvOff 0.55s cubic-bezier(0.230, 1.000, 0.320, 1.000);
	animation-fill-mode: forwards }

/* Magazine */
.magazine .tetris__imageLink {
	overflow: hidden }
.magazine .tetris__image {
	padding-block-start: 1em; padding-block-end: 0.5em;
	transform: scale(1.6) }

/* Versus */
.tetris__image.versus {
	image-rendering: pixelated }

/* Scoring Table */
.scoring .tetris__table {
	text-align: center }
.scoring .tetris__table thead {
	background-color: var(--colorShading, lightgray) }
.scoring .tetris__table tr	> :not(:first-child) {
	min-width: 4em }
.scoring .tetris__table tbody tr > :first-child {
	background-color: var(--colorHighlight, lightpink) }
.scoring .tetris__table thead th:first-child,
.scoring .tetris__table tbody tr:last-child :first-child {
	text-transform: uppercase }
.scoring .tetris__toggle {
	float: right;
	position: relative;
	width: 1.5em;
	margin-block-start: -0.25em; margin-inline-end: 2.5em;
	padding: 0;
	font-size: 1.33em; text-align: center;
	cursor: pointer;
	background: none; border: none;
	color: var(--colorText, black) }
.scoring .tetris__toggleIcon::before {
	will-change: opacity;
	transition: opacity 0.25s ease-in-out;
	content: "♥︎"; opacity: 0;
	position: absolute;
	left: 0; top: 0;
	width: 100%;
	color: var(--colorText, black) }
.scoring .tetris__toggleInput.active + .tetris__toggleIcon::before {
	opacity: 1 }
.scoring .tetris__toggleInput,
.scoring .tetris__toggleText {
	display: none }

/* Miyamoto */
.tetris__imageLink.miyamoto {
	display: block; position: relative;
	width: 15em; height: 15em;
	overflow: hidden;
	border: solid 2px var(--colorBackground, white);
	border-radius: 50%;
	box-shadow: 0 0 0 2px var(--colorText, black) }
.tetris__image.miyamoto {
	position: absolute;
	left: 50%; top: 50%; height: 100%;
	transform: translate(-50%, -50%) }
.tetris__caption.miyamoto {
	text-align: center }

/* Game Boy */
.tetris__imageLink.gameboy {
	overflow: hidden;
	padding-top: 33%; padding-bottom: 31%;
	filter: drop-shadow(1px 1px 2px var(--colorShadow, gray)) }
.tetris__image.gameboy {
	transform: scale(2) translateX(-0.6%) }
.tetris__caption.gameboy {
	transform: scale(1) } /* for filter: drop-shadow stacking */

/* Strategy Chart */
.strategy .tetris__container {
	display: grid;
	grid-template-columns: min-content auto; grid-template-rows: 27% 27% 46%;
	box-shadow: 0 0 0 2px var(--black, black) }
.strategy .tetris__image { grid-row: 1 / 4 }
.strategy .tetris__region {
	display: grid; box-sizing: border-box;
	align-content: center;
	padding: 0 3em 0 1.5em;
	border-style: solid; border-color: var(--black, black);
	border-width: 2px 0 0 1px }
.strategy .tetris__region.safe {
	background-color: var(--colorSafe, royalblue); color: var(--gray100) }
.strategy .tetris__region.warning {
	background-color: var(--colorWarning, mediumseagreen); color: var(--gray100) }
.strategy .tetris__region.danger {
	background-color: var(--colorDanger, crimson); color: var(--gray10);
	border-top-width: 0;
	font-weight: 700 }

/* Evaluation Form */
.evaluation .tetris__formTitle,
.evaluation .tetris__dataList,
.evaluation .tetris__image,
.evaluation .tetris__table {
	background-color: var(--gray10, white) }
.evaluation.tetris__figure {
	grid-template-columns: 100% }
.evaluation .tetris__form {
	background-color: var(--gray30, lightgray);
	color: var(--colorText, black);
	box-shadow: 0 4px 8px rgba(0,0,0,0.25),
	            0 2px 2px rgba(0,0,0,0.22) }
.evaluation .tetris__formTitle {
	margin: 1em;
	text-align: center;
	font-style: italic; font-variant: small-caps;
	box-shadow: 1px 1px var(--gray100, black),
	            2px 2px var(--gray100, black) }
.evaluation .tetris__dataList,
.evaluation .tetris__table { margin: 1em }
.evaluation .tetris__dataList {
	display: grid; grid-template-columns: 50% 50%;
	border: solid 2px var(--gray100, black) }
.evaluation .tetris__dataList > :first-child { grid-column: 1 / 3 }
.evaluation .tetris__table th,
.evaluation .tetris__table td,
.evaluation .tetris__formField {
	border: solid var(--gray100, black); border-width: 1px 1px 0 0;
	padding: 0.5em }
.evaluation .tetris__formLabel,
.evaluation .tetris__table th {
	font-family: "IBM Plex Sans Condensed" }
.evaluation .tetris__formLabel {
	font-size: 0.6em; font-weight: 600;
	text-transform: uppercase }
.evaluation .tetris__formField:first-child { border-top-width: 0 }
.evaluation .tetris__formField:nth-child(odd) { border-right-width: 0 }
.evaluation .tetris__formField:last-child .tetris__formLabel {
	margin-block-end: -1em }
.evaluation .tetris__table td,
.evaluation .tetris__formInput {
	font-family: "Handwriting";
	color: var(--colorHandwriting, dodgerblue) }
.evaluation .tetris__formInput {
	line-height: 0.75em;
	margin: 0; white-space: nowrap }
.evaluation .tetris__formField:nth-child(1) .tetris__formInput { padding-inline-start: 0.25em }
.evaluation .tetris__formField:nth-child(2) .tetris__formInput { padding-inline-start: 0.5em }
.evaluation .tetris__formField:nth-child(3) .tetris__formInput { padding-inline-start: 1em }
.evaluation .tetris__formField:nth-child(4) .tetris__formInput { padding-inline-start: 0.75em }
.evaluation .tetris__formField:nth-child(5) .tetris__formInput { padding-inline-start: 0.5em }
.evaluation .tetris__formField:nth-child(6) .tetris__formInput { padding-inline-start: 0.25em }
.evaluation .tetris__formField:nth-child(7) .tetris__formInput { padding-inline-start: 6em }
.evaluation .tetris__image {
	display: block;
	width: 20em; height: 100%;
	justify-self: center;
	border: solid 2px var(--gray100, black) }
.evaluation .tetris__image text {
	font-weight: 600 }
.evaluation .tetris__image text.quadrantIdentifier {
	font-weight: 700 }
.evaluation .tetris__table {
	border-collapse: collapse }
.evaluation .tetris__tableColumn.category { width: 25% }
.evaluation .tetris__tableColumn.score { width: 17.5% }
.evaluation .tetris__tableColumn.comments { width: 40% }
.evaluation .tetris__table td {
	text-align: center }
.evaluation .tetris__table thead th {
	font-size: 0.75em; line-height: 1;
	text-transform: uppercase }
.evaluation .tetris__table thead th:last-child {
	text-transform: none;
	text-align: left; vertical-align: top;
	border-bottom-width: 0 }
.evaluation .tetris__table tbody th {
	font-size: 0.75em;
	text-align: left }
.evaluation .tetris__tableCell.comments {
	padding-block-start: 0.25em; padding-block-end: 0.25em;
	padding-inline-start: calc(0.5em + 5px); padding-inline-end: calc(0.5em + 5px);
	text-align: left; vertical-align: top;
	line-height: 1.75em;
	background-image: linear-gradient(to right, var(--gray10, white) 2px, transparent 1px),
	                  linear-gradient(var(--gray100, black) 1px, transparent 1px);
	background-size: 3px calc(100% / 7 * 1.05);
	border-top: none;
	box-shadow: inset 0 -5px 0 5px var(--gray10, white) }
.evaluation .tetris__table tbody tr abbr {
	font-size: 2em;
	float: left;
	margin-right: 0.25em }
.evaluation .tetris__table tbody tr abbr::after {
	content: "=" }
.evaluation .tetris__table tbody tr span {
	line-height: 2.75 }
 .evaluation .tetris__image [stroke="white"] { stroke: var(--gray10, white) }
 .evaluation .tetris__image [stroke="black"] { stroke: var(--gray100, black) }
 .evaluation .tetris__image [fill="white"] { fill: var(--gray10, white) }
 .evaluation .tetris__image [fill="black"] { fill: var(--gray100, black) }
 .evaluation .tetris__image [stroke="dodgerblue"] { stroke: var(--colorHandwriting, dodgerblue) }

/* Jeff */
.tetris__figure.jeff {
	display: inline-flex; float: left; overflow: hidden;
	margin-block-start: 0; margin-block-end: 0;
	margin-inline-start: 0.75em; margin-inline-end: 0.75em;
	border-radius: 50%;
	border: solid 1px var(--colorBackground, white);
	box-shadow: 0 0 0 1px var(--colorText, black) }
.tetris__image.jeff {
	height: 3em;
	border: solid 1px var(--colorBackground, white);
	border-radius: 50% }


/* References & Citations */
.tetris__resources {
	list-style: none;
	padding-inline-start: 2em; text-indent: -2em }
.tetris__resource { padding-bottom: 1em }

/* Waiting Spinner */
.tetris__spinner {
	display: none;
	z-index: 18;
	position: absolute;
	left: 50%; top: 50%;
	width: 64px; height: 64px;
	pointer-events: none }
.tetris__spinnerContainer {
	animation: tetris__spinLinear 1568.23529647ms linear infinite;
	position: absolute;
	left: 50%; top: 50%;
	width: 100%;
	margin-left: -50%; margin-top: -50%;
	padding-bottom: 100%;
	pointer-events: none }
.tetris__spinnerRotator {
	animation: tetris__spinEase 5332ms cubic-bezier(0.4,0.0,0.2,1) infinite both;
	position: absolute;
	width: 100%; height: 100% }
.tetris__spinnerLeft {
	position: absolute;
	left: 0; top: 0; bottom: 0; right: 49%;
	overflow: hidden }
.tetris__spinnerRight {
	position: absolute;
	left: 49%; top: 0; bottom: 0; right: 0;
	overflow: hidden }
.tetris__spinnerCircle {
	position: absolute;
	width: 200%; height: 100%;
	box-sizing: border-box;
	border-style: solid;
	border-color: var(--colorSpinner, #DDD) var(--colorSpinner, #DDD) transparent;
	border-radius: 50%;
	border-width: 6px }
.tetris__spinnerCircle.left {
	animation: tetris__spinLeft 1333ms cubic-bezier(0.4,0.0,0.2,1) infinite both;
	left: 0; right: -100%;
	border-right-color: transparent }
.tetris__spinnerCircle.right {
	animation: tetris__spinRight 1333ms cubic-bezier(0.4,0.0,0.2,1) infinite both;
	left: -100%; right: 0;
	border-left-color: transparent }

/* Color Scheme Toggle */
.colorScheme.tetris__toggle {
	will-change: opacity;
	transition: opacity 0.25s ease-in-out;
	position: fixed; right: 0; top: 0;
	display: grid; align-content: center; justify-content: center;
	width: 0.8em; height: 0.8em;
	margin: 1em; padding: 0;
	cursor: pointer;
	background: none; border: none; border-radius: 50%;
	color: var(--colorText, black);
	font-size: 1em; text-align: center;
	opacity: 0.125;
	transform: rotate(0deg) }
.colorScheme.tetris__toggle:hover {
	opacity: 0.5 }
.colorScheme .tetris__toggleIcon {
	will-change: transform;
	transition: transform 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);
	display: inline-block }
.colorScheme .tetris__toggleInput.active + .tetris__toggleIcon {
	transform: rotate(180deg) }
.colorScheme .tetris__toggleInput,
.colorScheme .tetris__toggleText { display: none }

/* Color Scheme */
:root {
	--black: #000000; --white: #ffffff;
	--gray10: #f4f4f4; --gray30: #c6c6c6; --gray40: #a8a8a8; --gray60: #6f6f6f; --gray70: #525252; --gray80: #393939; --gray90: #262626; --gray100: #161616;
	--coolGray20: #dde1e6;
	--green30: #6fdc8c; --green40: #42be65; --green50: #24a148;
	--cyan40: #33b1ff; --cyan50: #1192e8; --cyan60: #0072c3; --cyan70: #00539a; --cyan80: #003a6d; --cyan90: #012749;
	--blue50: #4589ff; --blue60: #0f62fe; --blue70: #0043ce;
	--purple60: #8a3ffc; --purple70: #6929c4;
	--magenta30: #ffafd2; --magenta90: #510224;
	--red50: #fa4d56; --red70: #a2191f }
.tetris__article {
	--colorBackground: var(--gray10);
	--colorText: var(--gray100);
	--colorHighlight: var(--magenta30);
	--colorShading: var(--gray30);
	--colorShadow: var(--gray80);
	--colorSpinner: var(--coolGray20);
	--colorHandwriting: var(--cyan60);
	--colorDanger: var(--red50);
	--colorWarning: var(--green30);
	--colorSafe: var(--blue50);
	--colorChannel: var(--green40) }

@media (prefers-color-scheme: dark) {
	.color-scheme-inverted .tetris__article {
		--colorBackground: var(--gray100); --colorText: var(--gray10);
		--colorHighlight: var(--magenta90); --colorShading: var(--gray90);
		--colorShadow: var(--black);
		--colorHandwriting: var(--cyan50);
		--colorDanger: var(--red70);
		--colorWarning: var(--green50);
		--colorSafe: var(--blue60)	}
	.color-scheme-inverted
		.evaluation .tetris__form {
			background-color: var(--gray80, lightgray);
			color: var(--gray100, black) }
	.color-scheme-inverted
		.evaluation .tetris__dataList,
	.color-scheme-inverted
		.evaluation .tetris__table th,
	.color-scheme-inverted
		.evaluation .tetris__table td,
	.color-scheme-inverted
		.evaluation .tetris__formField,
	.color-scheme-inverted
		.evaluation .tetris__image {
			border-color: var(--gray100, black) }
	.color-scheme-inverted
		.evaluation .tetris__formTitle,
	.color-scheme-inverted
		.evaluation .tetris__dataList,
	.color-scheme-inverted
		.evaluation .tetris__image,
	.color-scheme-inverted
		.evaluation .tetris__table {
			background-color: var(--gray60, white) }
	.color-scheme-inverted
		.evaluation .tetris__tableCell.comments {
			background-image: linear-gradient(to right, var(--gray60, white) 2px, transparent 1px),
									linear-gradient(var(--gray100, black) 1px, transparent 1px);
			box-shadow: inset 0 -5px 0 5px var(--gray60, white) }
	.color-scheme-inverted
		.evaluation .tetris__table {
			border-color: var(--gray100, black) }
	.color-scheme-inverted
		.evaluation .tetris__image [stroke="white"] {
			stroke: var(--gray60, white) }
	.color-scheme-inverted
		.evaluation .tetris__image [stroke="black"] {
			stroke: var(--gray100, black) }
	.color-scheme-inverted
		.evaluation .tetris__image [fill="white"] {
			fill: var(--gray60, white) }
	.color-scheme-inverted
		.evaluation .tetris__image [fill="black"] {
			fill: var(--gray100, black) }

	.color-scheme-inverted
		.evaluation .tetris__image [stroke="dodgerblue"] {
			stroke: var(--cyan90, dodgerblue) }
	.color-scheme-inverted
		.evaluation .tetris__table td,
	.color-scheme-inverted
		.evaluation .tetris__formInput {
			color: var(--cyan90, dodgerblue) } }

/* Responsive Screen */
@media screen { }

/* Extra Small (Small Phone) */
@media screen and (max-width: 600px) {
	.tetris__figure.nester {
		float: right;
    	margin-inline-start: 3em }
	.tetris__image.nester {
		max-width: 15em }
	.tetris__image.gameboy {
		max-width: 25em }
	.tetris__figure.evaluation {
		max-width: 33em;
		margin-inline-start: auto; margin-inline-end: auto }
	.tetris__figure.strategy {
		max-width: 30em;
		margin-inline-start: auto; margin-inline-end: auto }
	.strategy .tetris__image {
		height: 160px }
	.tetris__blockquote.miyamoto {
		float: left; width: 50% }
	.tetris__figure.miyamoto {
		position: relative;
		top: 2.25em;
		width: calc(50% - 9em);
		margin-block-end: 3em }
	.tetris__imageLink.miyamoto {
		width: 8em; height: 8em } }
@media screen and (max-width: 600px) and (min-width: 400px) {
	.tetris__figure.strategy,
	.tetris__figure.versus {
		float: left;
		margin-inline-end: 3em }
	.tetris__figure.strategy {
		margin-block-start: 2em; margin-block-end: 0em } }

/* Small (Tablet Portrait, Large Phone) */
/* Small Only */
@media screen and (min-width: 600px) and (max-width: 900px) { }
@media screen and (min-width: 600px) {
	.tetris__article {
		font-family: "IBM Plex Serif", serif;
		font-size: 14pt }
	.tetris__caption,
	.tetris__table.scoring,
	.tetris__article > footer,
	.evaluation .tetris__formTitle,
	.tetris__figure.strategy {
		font-family: "IBM Plex Sans", sans-serif }
	.tetris__figure.strategy,
	.tetris__article > footer {
		font-size: 10pt; font-weight: 400 }
	.tetris__table.scoring tr > :first-child {
		text-align: left }
	.scoring .tetris__toggle {
		margin-inline-end: 1.5em }
	.tetris__section:not(.callToAction) {
		display: grid;
		grid-template-columns: repeat(12, 1fr) }
	.tetris__section:not(.callToAction) > * {
		grid-column: 1 / 13; order: 0 }
	.tetris__blockquote.pajitnov { grid-area: 3 / 1 / auto / span 7 }
	.tetris__figure.nester { grid-area: 3 / 8 / auto / span 5 }
	.tetris__figure.commercial { grid-area: 7 / 1 / auto / span 13 }
	.tetris__figure.tetrads { grid-area: 2 / 8 / auto / 13; grid-template-columns: auto }
	.tetris__figure.tetrads .tetris__image { width: 100% }
	.tetris__section.review > h3 + p { grid-area: 2 / 1 / auto / 7 }
	.tetris__figure.versus { grid-area: 4 / 1 / 7 / 5 }
	.tetris__blockquote.objective { grid-area: 4 / 5 / auto / 13 }
	.tetris__blockquote.objective + p { grid-area: 5 / 5 / auto / 13 }
	.tetris__blockquote.objective + p + p { grid-area: 6 / 5 / auto / 13 }
	.tetris__table.scoring { font-size: 0.75em }
	.tetris__blockquote.miyamoto { grid-area: 16 / 1 / auto / 9 }
	.tetris__figure.miyamoto { grid-area: 16 / 9 / auto / 13 }
	.tetris__imageLink.miyamoto { width: 9em; height: 9em }
	.tetris__figure.gameboy { grid-area: 4 / 1 / 6 / 7 }
	.tetris__figure.gameboy + p + p { grid-area: 4 / 7 / auto / 13 }
	.tetris__figure.gameboy + p + p + p { grid-area: 5 / 7 / auto / 13 }
	.tetris__imageLink.gameboy { width: 15em }
	.tetris__image.gameboy { width: 100% }
	.tetris__blockquote.wozniak { grid-area: 8 / 6 / auto / 13 }
	.tetris__blockquote.wozniak + p { grid-area: 8 / 1 / auto / 6 }
	.tetris__figure.strategy { grid-area: 10 / 1 / auto / 7 }
	.tetris__figure.strategy + p { grid-area: 10 / 7 / auto / 13 }
	.tetris__figure.evaluation {
		max-width: 35em;
		margin-inline-start: auto; margin-inline-end: auto } }
@media screen and (max-width: 900px) {
	.tetris__table.scoring,
	.tetris__table.scoring thead,
	.tetris__table.scoring tbody,
	.tetris__table.scoring tr {
		display: grid }
	.tetris__table.scoring {
		grid-template-columns: 20% 80% }
	.tetris__table.scoring tbody {
		grid-template-columns: repeat(4, 1fr) }
	.tetris__table.scoring tr {
		grid-template-columns: 1fr }
	.tetris__table.scoring {
		text-align: center } }

/* Medium (Tablet Landscape) */
@media screen and (min-width: 900px) and (max-width: 1200px) { }
@media screen and (min-width: 900px) { }
@media screen and (max-width: 1200px) { }

/* Large (Desktop) */
@media screen and (min-width: 1200px) and (max-width: 1800px) { }
@media screen and (min-width: 1200px) {
	body {
		background-color: var(--gray10);
		transition: background-color 0.25s }
	.tetris__article {
		font-family: "IBM Plex Serif", serif;
		font-size: 16pt;
		max-width: 80ch }
	.tetris__blockquote.description {
		max-width: 25em;
		margin-inline-start: auto;
		margin-inline-end: auto }
	.tetris__figure.commercial { grid-area: 7 / 1 / auto / span 7 }
	.tetris__figure.commercial + p { grid-area: 7 / 8 / auto / span 13 }
	.tetris__figure.versus + p + p { grid-area: 8 / 1 / auto / span 6 }
	.tetris__blockquote.instructions { grid-area: 8 / 7 / 10 / span 13 }
	.tetris__blockquote.instructions + p { grid-area: 9 / 1 / auto / span 6 }
	.tetris__imageLink.gameboy { width: 23em }
	.tetris__figure.gameboy { grid-area: 4 / 1 / 7 / 8 }
	.tetris__figure.gameboy + p + p { grid-area: 4 / 8 / auto / 13 }
	.tetris__figure.gameboy + p + p + p { grid-area: 5 / 8 / auto / 13 }
	.tetris__figure.gameboy + p + p + p + p { grid-area: 6 / 8 / auto / 13 }
	.tetris__figure.evaluation { font-size: 12pt } }
@media screen and (min-width: 1200px) and (prefers-color-scheme: dark) {
	body.color-scheme-inverted { background-color: var(--gray100) } }
@media screen and (max-width: 1800px) { }

/* Extra Large (4KTV) */
@media screen and (min-width: 1800px) { }